<?php

namespace SM\Bundle\AdminBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\UnitOfWork;

/**
 * GroupsLanguageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductGroupLanguageRepository extends EntityRepository {

    /**
     * @param type $criteria criteria
     *
     * @return type
     */
    public function getTotal($criteria = array()) {
        $rst = $this->findBy($criteria);

        return count($rst);
    }

    /**
     * @param int $branchId
     *
     * @return type
     */
    public function findByProductGroupId($productGroupId) {
        $rst = array();
        if (!empty($productGroupId)) {
            $rst = $this->findBy(array('productgroup' => $productGroupId));
        }

        return $rst;
    }

    /**
     * Delete language by array id
     *
     * @param array $ids
     *
     * @return array
     */
    public function deleteByIds($ids = array()) {
        $em = $this->getEntityManager();
        $repComtype = $em->getRepository('SMAdminBundle:ProductGroup');

        $rst = array();
        if (is_array($ids) && count($ids)) {
            foreach ($ids as $id) {
                $entity = $this->find($id);
                $idProductGroup = $entity->getProductGroup()->getId();

                $em->remove($entity);

                //Get all company type language by idComtype
                //If to have 1 item we need to delete company type too
                //else we need delete company type language
                $lstLangs = $this->findByProductGroupId($idProductGroup);
                if (count($lstLangs) == 1) {
                    if ($em->getUnitOfWork()->getEntityState($entity) == UnitOfWork::STATE_REMOVED) {
                        $rst[] = $id;
                    }
                    //delete article too
                    $em->flush();
                    //delete article language
                    $repComtype->deleteByIds(array($idProductGroup));
                } else {
                    if ($em->getUnitOfWork()->getEntityState($entity) == UnitOfWork::STATE_REMOVED) {
                        $rst[] = $id;
                    }
                    //Onlye delete article language
                    $em->flush();
                }
            }
        }

        return $rst;
    }

}
